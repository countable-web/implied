// Generated by CoffeeScript 1.8.0
(function() {
  var Mailer, base, util,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  base = require('./base');

  util = require('../../util');

  Mailer = (function(_super) {
    __extends(Mailer, _super);

    function Mailer(app) {
      Mailer.__super__.constructor.apply(this, arguments);
      this.sendgrid = require("sendgrid")(this.app.get('email_username'), this.app.get('email_password'));
    }

    Mailer.prototype.send_mail = function(opts, callback) {
      var defaults, email, file, files, _i, _len;
      defaults = {
        from: this.default_from,
        text: opts.body,
        headers: {
          'X-SMTPAPI': '{"category": ' + (this.app.get('name')) + '}'
        }
      };
      files = opts.files || [];
      delete opts.files;
      email = new this.sendgrid.Email(util.extend({}, defaults, opts));
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        email.addFile(file);
      }
      return this.sendgrid.send(email, function(success, message) {
        var err;
        if (!success) {
          console.error(message);
        }
        err = null;
        if (!success) {
          err = message;
        }
        return typeof callback === "function" ? callback(err) : void 0;
      });
    };

    return Mailer;

  })(base.Mailer);

  module.exports = function(app) {
    return app.set('mailer', new Mailer(app));
  };

}).call(this);
