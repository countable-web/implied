// Generated by CoffeeScript 1.6.2
(function() {
  var exec;

  exec = require('child_process').exec;

  module.exports = function(opts) {
    var db;

    db = opts.db;
    return {
      syscall: function(command, callback, throws) {
        var child;

        if (throws == null) {
          throws = true;
        }
        return child = exec(command, function(error, stdout, stderr) {
          if (stdout) {
            console.log("stdout: " + stdout);
          }
          if (stderr && throws) {
            console.error(command);
            throw "stderr: " + stderr;
          }
          if (error && throws) {
            console.error(command);
            throw "exec error: " + error;
          }
          return typeof callback === "function" ? callback(stdout, error || stderr) : void 0;
        });
      },
      flash: function(req, message_type, message) {
        var m, _base, _ref, _ref1;

        if (message_type && message) {
          m = (_ref = (_base = req.session).messages) != null ? _ref : _base.messages = {};
          if ((_ref1 = m[message_type]) == null) {
            m[message_type] = [];
          }
          return m[message_type].push(message);
        }
      },
      staff: function(req, res, next) {
        if (req.session.email) {
          return db.collection('users').findOne({
            email: req.session.email,
            admin: true
          }, function(err, user) {
            if (user) {
              return next();
            } else {
              if (typeof req.flash === "function") {
                req.flash('Not authorized.');
              }
              return res.redirect(opts.login_url + "?then=" + req.path);
            }
          });
        } else {
          if (typeof req.flash === "function") {
            req.flash('Not authorized.');
          }
          return res.redirect(opts.login_url + "?then=" + req.path);
        }
      }
    };
  };

}).call(this);
