//@ sourceMappingURL=logging.map
// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty;

  module.exports = function(opts) {
    var app, mailer, prod_error;
    mailer = opts.mailer;
    app = opts.app;
    app.configure("development", function() {
      return app.use(express.errorHandler({
        dumpExceptions: true,
        showStack: true
      }));
    });
    app.set('view options', {
      layout: false
    });
    prod_error = function(opts, callback) {
      return mailer({
        subject: "Error on " + (app.get('host') || "website") + " - " + opts.title,
        from: "errors@mrblisted.ca",
        to: [app.get('error_email')],
        body: opts.message
      }, function(success, message) {
        if (success) {
          return typeof callback === "function" ? callback() : void 0;
        } else {
          console.error("ERROR EMAIL FAILED: ", message);
          return typeof callback === "function" ? callback("ERROR EMAIL FAILED: ", message) : void 0;
        }
      });
    };
    return app.configure("production", function() {
      return app.use(function(err, req, res, next) {
        var k, message, v, _ref, _ref1;
        message = "Stack Trace:\n============\n\n" + err.stack + "\n\nRequest:\n========\n\n" + req.method + " " + (req.protocol.toUpperCase()) + "/" + req.httpVersionMajor + "." + req.httpVersionMinor + "\n\n";
        _ref = req.headers;
        for (k in _ref) {
          if (!__hasProp.call(_ref, k)) continue;
          v = _ref[k];
          message += " - " + k + " : " + v + "\n";
        }
        if (req.session) {
          message += "\nSession:\n========\n";
          _ref1 = req.session;
          for (k in _ref1) {
            if (!__hasProp.call(_ref1, k)) continue;
            v = _ref1[k];
            message += " - " + k + " : " + v + "\n";
          }
        }
        console.error(message);
        prod_error({
          title: err.name,
          message: message
        });
        return res.render('500');
      });
    });
  };

}).call(this);
